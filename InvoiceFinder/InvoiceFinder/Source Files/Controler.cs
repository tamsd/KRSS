using System;
using System.Collections.Generic;
using System.Windows.Forms;
using InvoiceFinder.BackEnd;
using System.Configuration;
using System.Collections.Specialized;

namespace InvoiceFinder
{
    static class Program
    {
        /// <summary>
        /// The main entry point for the application.
        /// </summary>
        [STAThread]
        static void Main()
        {
            //test

            // string trans_id, cust_id, store_id, reg_id, s_date, e_date;
            SearchQueue sQueue = new SearchQueue();
            Settings st = new Settings();
            Finder myF = new Finder(ref sQueue, ref st);
            Results myR = new Results();
            Exporter myE = new Exporter(ref st, ref myR);

            st.setArchiveA(ConfigurationManager.AppSettings["Archive_a"]);
            st.setArchiveB(ConfigurationManager.AppSettings["Archive_b"]);
            st.setFinalDestination(ConfigurationManager.AppSettings["Store1"]);
            st.addOtherPath(ConfigurationManager.AppSettings["temp_folder"]);
            st.addOtherPath(ConfigurationManager.AppSettings["temp_folder2"]);
            //st.setOutputPath(ConfigurationManager.AppSettings["Output_Path"]);


            //run the invoice environment and change these to adjust to your own data set generated by the environment generator ////store.region.trans.cust.date
            sQueue.addSearch("0.0.14.0.05202012.*"); //store
            sQueue.addSearch("0.0.148.24.02282013.*"); //archive 1 but not store
            sQueue.addSearch("1.7.385.3.12232008.*"); //archive 2 but no store
            sQueue.addSearch("3.1.892.37.04232015.*"); //temp 1

            Dictionary<string, Invoice> r = myF.execute();
            myR.copyDictionary(r);

            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new MainPage(ref myR, ref sQueue, ref st, ref myF, ref myE));

            return;
        }
    }
}

